[
    
    
    {
        "url": "/templates/md_shortcodes/",
        "title": "Build-in Shortcodes",
        "content": "See https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes\nfigure   2 People Sitting With View of Yellow Flowers during Daytime   gist  highlight \u0026lt;section id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1 id=\u0026#34;title\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ .Render \u0026#34;summary\u0026#34;}} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; instagram    View this post on Instagram        #Talitha #Getty #yacht in #fjærland #fjærlandsfjorden #sognefjorden #mundal #norway #landscape #panorama #travel #instagoodmyphoto #justgoshoot #peoplescreatives #visualsoflife #photography #photoshoot #photodaily #photogram #instagood #picoftheday #fjærland #photooftheday #pentax #nrksf #sognavis\nA post shared by Bjørn Erik Pedersen (@bepsays) on Jul 6, 2017 at 9:27am PDT\n  tweet Hugo 0.24 Released: Big archetype update + @Netlify _redirects etc. file supporthttps://t.co/X94FmYDEZJ #gohugo #golang @spf13 @bepsays\n\u0026mdash; GoHugo.io (@GoHugoIO) June 21, 2017  vimeo   youtube   "
    }
    
    , 
    {
        "url": "/templates/md_custom_shortcodes/",
        "title": "Custom Shortcodes",
        "content": "Alert panel Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Alert panel using HTML Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim venia, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim venia, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Alert panel using Markdown (use the % character) primary I\u0026rsquo;m an inline-style link with title\n One Two Three    Alert panel with titles and colors primary Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   success Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   caution Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   warning Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   danger Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Alert panel with Font Awesome  danger Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Button primary success caution warning danger Button with Font Awesome  Download  Download "
    }
    
    , 
    {
        "url": "/templates/md_structure/",
        "title": "Sample Document",
        "content": "Header H1 Header H2 Header H3 Header H4 Header H5 Header H6 Header Paragraph Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nEmphasis Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nHorizontal Rule  List  Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit  Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit     Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit Lorem ipsum dolor sit amet, consectetur adipisicing elit  Code puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; puts \u0026#39;The best way to log and share programmers knowledge.\u0026#39; inline code #ffce44\nBlockquote  this is a blockquote. this is a blockquote. this is a blockquote. this is a blockquote. this is a blockquote. this is a blockquote.\nthis is a blockquote.\nthis is a blockquote.\nthis is a blockquote.\n Table    header header header     Lorem Lorem Lorem   ipsum ipsum ipsum   dolor dolor dolor   sit sit sit   amet amet amet    with alignment    Left align Right align Center align     This This This   column column column   will will will   be be be   left right center   aligned aligned aligned    Image Image with link \n"
    }
    
    , 
    {
        "url": "/system/",
        "title": "System",
        "content": "  Files Identification L’identification se fait premièrement par la lecture de l’extension du fichier qui se trouve juste derrière le nom du fichier (Attention sous windows, par défaut les extensions de fichier sont caché), on peut trouver par exemple “.png” ou “.jpg” pour une image. Cette identification permet à l’OS d’executer l’outil par défaut relié et configuré pour cette extension. La signature d’un fichier, une séquence unique de bits présent dans l’entête d’un fichier. \n Registre La base de registre est un élément fondamental du système. C’est une gigantesque base de données qui peut atteindre plusieurs dizaines de méga. Afin de faciliter la gestion de cette base, celle ci est organisée en 5 clés principales, elles mêmes divisées en sous clés. Les 5 clés et leurs fonctions HKEY_CLASS_ROOT : Cette clé gère les extensions des fichiers ainsi que les liaisons avec les logiciels et serveurs ActiveX. Toutes les extensions des fichiers et leur programme correspondant sont gérés ici. \n Hash La somme de contrôle (Hash) La version basique d’un tel mécanisme est appelée “somme de contrôle”. Le but d’une somme de contrôle est en quelque sorte d’être “l’empreinte” d’une donnée (attention, cette “empreinte” n’est pas une signature et ne garantit pas pour autant l’identité). Un exemple très simplifié serait de compter le nombre de lettres dans un message et de rajouter ce nombre à la fin dudit message. De cette manière, un destinataire peut immédiatement vérifier que le message n’a pas été coupé par erreur. \n "
    }
    
    , 
    {
        "url": "/templates/md_tableofcontent/",
        "title": "Table of Contents",
        "content": " Note The TableOfContents field set to true in your content’s front matter will render a table of contents.\nTableOfContents: true Setting the built-in .TableOfContents variables can configure what heading levels you want to include in TOC. See the built-in .TableOfContents variables settings\n  Section 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 3 - 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 3 - 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 3 - 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 3 - 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 3 - 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 3 - 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 2 - 3 - 4 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 2 - 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 4 - 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSection 5 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
    }
    
    , 
    {
        "url": "/reseau/",
        "title": "Reseau",
        "content": "  Adresses IP Description Une Adresse IP (Internet Protocol) est un numéro d\u0026rsquo;identification qui est attribué de façon permanente ou provisoire à chaque périphérique relié à un réseau informatique qui utilise l\u0026rsquo;Internet Protocol. Cette adresse est assignée soit individuellement par l\u0026rsquo;administrateur du réseau local dans le sous-réseau correspondant, soit automatiquement via le protocole DHCP[1]. Si l\u0026rsquo;ordinateur dispose de plusieurs interfaces, chacune dispose d\u0026rsquo;une adresse IP spécifique. Une interface peut également disposer de plusieurs adresses IP. \n Wireshark Wireshark est un outil très utilisé en réseau, il permet de surveiller les paquets de données échangés sur un réseau. C’est un logiciel multi-plateforme utilisable sous Linux, Windows et Mac. La documentation complète de l’outil est disponible ici \n "
    }
    
    , 
    {
        "url": "/web/",
        "title": "Web",
        "content": "  HTML/CSS - PHP Table of contents HTML \u0026amp; CSS 1.1 Balises \u0026amp; Attributs _ Balises _ Attributs 1.2 Balises fréquentes PHP 2.1 Structure du PHP 2.2 Formulaires 2.3 Methode : GET vs POST 3. JavaScript Références HTML \u0026amp; CSS HTML HyperText Markup Language a fait son apparition dès 1991 lors du lancement du Web. Son rôle est de gérer et organiser le contenu. \n "
    }
    
    , 
    {
        "url": "/stegano/",
        "title": "Steganographie",
        "content": "Si vous voulez plus de details, j\u0026rsquo;avais ecrit un rapport asse complet (en anglais) sur la steganographie en 2018\n\n"
    }
    
    , 
    {
        "url": "/templates/",
        "title": "Templates",
        "content": ""
    }
    
    , 
    {
        "url": "/system/files/",
        "title": "Files",
        "content": "Identification L\u0026rsquo;identification se fait premièrement par la lecture de l\u0026rsquo;extension du fichier qui se trouve juste derrière le nom du fichier (Attention sous windows, par défaut les extensions de fichier sont caché), on peut trouver par exemple \u0026ldquo;.png\u0026rdquo; ou \u0026ldquo;.jpg\u0026rdquo; pour une image. Cette identification permet à l\u0026rsquo;OS d\u0026rsquo;executer l\u0026rsquo;outil par défaut relié et configuré pour cette extension.\nLa signature d\u0026rsquo;un fichier, une séquence unique de bits présent dans l\u0026rsquo;entête d\u0026rsquo;un fichier. Sur windows par exemple, cette signature est présente dans les 20 premiers bits d\u0026rsquo;un fichier. Chaque type de fichier à une signature différente. Par exemple une image PNG aura comme signature \u0026ldquo;89 50 4E 47 0D 0A 1A 0A\u0026rdquo; en hexadecimal. Lors de l\u0026rsquo;éxecution du fichier, l\u0026rsquo;outil en question va lire cette signature afin d\u0026rsquo;éxecuter correctement le fichier.\nMais attention ces informations peuvent être très facilement éronées, nous verrons par la suite comment.\nManipulation de signature Prenez un fichier quelconque et analysons le. Ici pour l\u0026rsquo;exemple je vais prendre une image PNG.\nNous pouvons voir que le nom de l\u0026rsquo;image est suivi de l\u0026rsquo;extension \u0026ldquo;.png\u0026rdquo;. Celle-ci permet à l\u0026rsquo;OS de savoir quel outil par défaut éxecutera cette image.\n"
    }
    
    , 
    {
        "url": "/system/registres/",
        "title": "Registre",
        "content": "La base de registre est un élément fondamental du système. C\u0026rsquo;est une gigantesque base de données qui peut atteindre plusieurs dizaines de méga. Afin de faciliter la gestion de cette base, celle ci est organisée en 5 clés principales, elles mêmes divisées en sous clés.\nLes 5 clés et leurs fonctions HKEY_CLASS_ROOT : Cette clé gère les extensions des fichiers ainsi que les liaisons avec les logiciels et serveurs ActiveX. Toutes les extensions des fichiers et leur programme correspondant sont gérés ici. Lorsque vous cliquez sur un document ayant une extension .xls par exemple, Windows saura qu\u0026rsquo;il devra charger Excel pour ouvrir le fichier.\nCertains menus contextuels sont également gérés ici, de même que les composants communs de Windows et les Dll et Exe Active X, les contrôles complémentaires, etc. Si les inscriptions de ces composants sont modifiés, vous pouvez au pire en plus pouvoir vous servir du programme qui en a besoin.\n/CLSID : Gestion des identificateurs de classe des objets COM\n/Extension : Cette clé gère les extensions de fichiers. Certaines extensions ne figurent cependant pas dans cette clé, il faut alors regarder du côté du type de fichier\n/Applications : Cette clé gère certains menus contextuels.\n/Directory : Clé gérant les menus contextuels du bouton démarrer.\n/Drive : Gestion des menus contextuels des lecteurs.\n/Folder : Icône et menus contextuels des dossiers\nHKEY_CURRENT_USER : Cette clé contient toutes les informations de l\u0026rsquo;utilisateur connecté (celui qui utilise le PC) : paramètres des dossiers et couleurs d\u0026rsquo;écran et du panneau de configuration. C\u0026rsquo;est une sous clé de HKEY_USERS\n/AppEvents : Cette clé contient les événements systèmes et leurs sons correspondants (allez jeter un oeil dans le panneau de configuration \u0026gt; sons et périphériques audio \u0026gt; sons)\n/EventLabels : Ce sont les événements système.\n/ControlPanel : Cette branche gère tous les paramètres du panneau de configuration.\n/keyboard/layout : Configuration du clavier.\n/Printers : Ce sont les paramètres d\u0026rsquo;impression et de l\u0026rsquo;assistant d\u0026rsquo;ajout d\u0026rsquo;imprimante.\n/Software : Ce sont les paramètres de certains composants des programmes ou du système d\u0026rsquo;exploitation\nHKEY_LOCAL_MACHINE : C\u0026rsquo;est la clé principale du registre avec HKEY_CLASS_ROOT : elle contient les paramètres de l\u0026rsquo;ordinateur et des logiciels.\nCes paramètres peuvent se changer lors de la modification d\u0026rsquo;un paramètre dans Windows ou un programme.\n/Software/Classes : Cette clé est une copie intégrale de la clé HKEY_CLASSES_ROOT.\n/Hardware : Cette clé contient toutes les informations sur le processeur, la taille de la mémoire et la gestion Plug and play de Windows. Les données sont initialisées à chaque démarrage, une modification des valeurs est donc inutile (non, vous n\u0026rsquo;aurez jamais un Pentium 4 à 10 Ghz !)\n/Software : Cette clé contient les informations sur les applications et les composants systèmes de windows.\n/System : Cette clé contient les paramètres de Windows nécessaires à chaque démarrage, ainsi que des paramètres nécessaires à certains programmes.\n/CurrentControlSet : Paramètres du système et des services (voir l\u0026rsquo;article consacré aux services)\n/Control/ComputerName : C\u0026rsquo;est le nom de votre ordinateur (visible dans le réseau)\nHKEY_USERS : Cette clé contient tous les profils utilisateurs et leurs paramètres. Lors de la création d\u0026rsquo;un nouveau profil, le modèle de départ est la clé par défaut.\nHKEY_CURRENT_CONFIG : Cette clé contient des informations sur le profil matériel utilisé au démarrage de l\u0026rsquo;ordinateur. Cette clé travaille avec le Plug and play de Windows.\nLes différents types de données :\nLes clés stockent des données. Ces données peuvent être de différents types :\nREG_BINARY : Ce sont des données binaires contenant des bits (0 ou 1). Ce type de donnée s\u0026rsquo;applique surtout aux composants matériels.\nREG_DWORD : Ce type de donnée comprend des données constituées de quartets (4 octets) et est surtout utilisé pour les pilotes de périphériques et les services apparentés.\nREG_EXPAND_SZ : Ce sont des chaînes de longueur variable. Elles contiennent une variable que le système remplace : %windir% est la variable qui contient le nom de dossier contenant windows.\nREG_MULTI_DZ : Ce sont des chaînes multiples qui contiennent des successions ou des listes de variables.\nREG_SZ : C\u0026rsquo;est une chaîne texte de longueur fixe.\nREG_FULL_RESOURCE_DESCRIPTOR : Ce type de données qui ne s\u0026rsquo;applique qu\u0026rsquo;à Windows XP contient des tableaux imbriqués stockant une liste de ressources correspondant à un matériel ou à un pilote.\n"
    }
    
    , 
    {
        "url": "/reseau/ip_address/",
        "title": "Adresses IP",
        "content": "Description Une Adresse IP (Internet Protocol) est un numéro d'identification qui est attribué de façon permanente ou provisoire à chaque périphérique relié à un réseau informatique qui utilise l'Internet Protocol. Cette adresse est assignée soit individuellement par l'administrateur du réseau local dans le sous-réseau correspondant, soit automatiquement via le protocole DHCP[1]. Si l'ordinateur dispose de plusieurs interfaces, chacune dispose d'une adresse IP spécifique. Une interface peut également disposer de plusieurs adresses IP.\n Fonctions et utilisations Une Adresse IP remplit deux fonctions principales. Il permet d'identifier l'hôte, ou plus précisément son interface réseau. Et fournit l'emplacement de l'hôte dans le réseau, et donc la capacité d'établir un chemin vers cet hôte. Chaque paquet transmis par le protocole IP, contient l'adresse IP de l'émetteur ainsi que l'adresse IP du destinataire. L’adresse IP est composée de 4 octets allant de 0 à 255 séparés par des points. Chaque adresse IP appartient à une classe qui correspond à une plage d’adresses IP. /!\\ A noter:\nCertaines adresse IP sont reservés et ne sont pas utilisables pour adresser des ordinateurs individuels, voir: Broadcast[2].\n ### Adresse IP : Publique \u0026amp; Privée\n Les adresses IP publiques sont utilisées sur Internet. Une adresse IP publique est unique dans le monde, alors que pour une adresse IP privée c’est dans le réseau local qu’elle est unique.\n  Les Classes Au total, il existe 5 types de classes: A, B, C, D et E. Elle servent à adapter l’adressage selon la taille du réseau. Cette notion de classe est desormais obsolète du fait de la pénurie d\u0026rsquo;adresses du début des années 2010.\n/!\\ A noter:\nDans la pratique, au début des années 2010, de nombreux matériels et logiciels se sont basés sur ce système de classe, y compris les algorithmes de routage des protocoles dit \u0026lsquo;classless\u0026rsquo; (cf. Cisco CCNA Exploration - Protocoles et concepts de routage). Il est donc important de les connaitres.\n   Classe Masque réseau Plage d\u0026rsquo;adresses réseau     A 255.0.0.0 0.0.0.0 ~ 126.255.255.255   B 255.255.0.0 128.0.0.0 ~ 191.255.255.255   C 255.255.255.0 192.0.0.0 ~ 223.255.255.255   D 240.0.0.0 224.0.0.0 ~ 239.255.255.255   E NA 240.0.0.0 ~ 255.255.255.255     Adresse IP et nom de domaine Le plus souvent, pour se connecter à un serveur informatique, l'utilisateur ne donne pas l'adresse IP du serveur, mais le nom de domaine de celui ci (par exemple: www.wikipedia.org). Ce nom de domaine est ensuite résolu en adresse IP par l'ordinateur de l'utilisateur en faisant appel au système de noms de domaine (ou DNS[4]). Ce n'est qu'une fois l'adresse obtenue qu'il est possible d'initier une connexion.\n Adresses de diffusion  L\u0026rsquo;adresse 255.255.255.255 est une adresse de diffusion (broadcast), limitée au même sous-réseau que la liaison locale utilisée, d\u0026rsquo;un hôte à tous les hôtes de ce sous-réseau ; elle sert notamment à découvrir les routeurs connectés adressés dans tout sous-réseau auquel l\u0026rsquo;hôte source est connecté. La première adresse d\u0026rsquo;un sous-réseau spécifie le réseau lui-même, elle sert pour des messages non nécessairement destinés aux seuls routeur mais qui ne doivent normalement pas être reroutés vers Internet. La dernière adresse est une adresse de diffusion (broadcast) pour des messages normalement destinés aux seuls les routeurs d\u0026rsquo;une liaison spécifique, permettant les échanges entre tous les hôtes de ce sous-réseau et les réseaux extérieurs (dont l\u0026rsquo;Internet global). Cette adresse n\u0026rsquo;est habituellement pas reroutée vers Internet, sauf en cas d\u0026rsquo;utilisation de protocoles particuliers.   IP Versions Aujourd\u0026rsquo;hui, deux versions du protocole Internet sont couramment utilisées sur Internet, l\u0026rsquo;IPv4 pour protocole Internet version 4 et l\u0026rsquo;IPv6 pour protocole Internet version 6.\nL'épuisement des adresses IPv4 a conduit au développement d'une nouvelle version d'IP, l'IPv6. Le manque d'adresse IPv4 est dans un premier temps contourné grâce à l'utilisation de techniques de traduction d'adresses comme le NAT[3]. Le nombre d'adresses IPv4 publiques est officiellement arrivé à saturation le 3 février 2011. Les adresses IP sont généralement écrites et affichées dans des notations lisibles par l'homme. IPv4 Les adresses IPv4 sont généralement représentées en notation décimale, composée de quatre nombres décimaux, chacun allant de 0 à 255, séparés par des points. Les adresses IPv4 sont codées sur 32 bits, ce qui limite à 4,3 x 10^+9 adresses possibles. Prenons l\u0026rsquo;adresse IPv4 suivante: 172.16.254.1. Dans cette exemple, chaque partie séparé par un point, représente un groupe de 8 bits (un octet) de l\u0026rsquo;adresse. Dans certains cas d\u0026rsquo;écriture technique, les adresses IPv4 peuvent être présentées dans diverses représentations hexadécimales, octales ou binaires.\nAdresse IPv4 : notation décimale -\u0026gt; binaire\n 172 . 16 . 254 . 1 v v v v 10101100.00010000.11111110.00000001 \u0026lt;-------\u0026gt;\u0026lt;------\u0026gt;\u0026lt;--------\u0026gt;\u0026lt;------\u0026gt; 8 bits 8 + 8 + 8 + 8 = 32 bits IPv6 Lors de la création de l\u0026rsquo;IPv4 à l\u0026rsquo;IPv6, la taille de l\u0026rsquo;adresse est passé de 32 à 128 bits. Permettant d\u0026rsquo;atteindre ainsi 3.4×10^+38 d\u0026rsquo;adresses possibles, jugé suffisant pour l\u0026rsquo;avenir. Les 128 bits d\u0026rsquo;une adresse IPv6 sont représentés en 8 groupes de 16 bits chacun. Chaque groupe est écrit en quatre chiffres hexadécimaux et les groupes sont séparés par des deux-points \u0026ldquo;:\u0026rdquo;\nPrenons l\u0026rsquo;IPv6 suivante: 2001: 0db8: 0000: 0000: 0000: ff00: 0042: 8329\nPour plus de commodité et de clarté, la représentation d\u0026rsquo;une adresse IPv6 peut être raccourcie avec les règles suivantes.\n Un ou plusieurs zéros à la tête de n\u0026rsquo;importe quel groupe de chiffres hexadécimaux sont supprimés, ce qui est généralement fait pour tous les zéros de tête.   Par exemple, le groupe 0042 est converti en 42.\n  Les sections consécutives de zéros sont remplacées par deux deux-points \u0026ldquo;::\u0026rdquo;. Cela ne peut être utilisé qu\u0026rsquo;une seule fois dans une adresse, car une utilisation multiple rendrait l\u0026rsquo;adresse indéterminée. La RFC 5952 requiert qu\u0026rsquo;un double-point ne soit pas utilisé pour indiquer une seule section omise de zéros. En appliquant ses règles, l\u0026rsquo;adresse IPv6 devient:  Adresse IPV6 initiale: \u0026gt; 2001: 0db8: 0000: 0000: 0000: ff00: 0042: 8329 Après avoir supprimé tous les zéros non significatifs de chaque groupe: \u0026gt; 2001:db8:0:0:0:ff00:42:8329 Après avoir omis les sections consécutives de zéros: \u0026gt; 2001:db8::ff00:42:8329 L\u0026rsquo;adresse de \u0026ldquo;bouclage\u0026rdquo; (loopback, en anglais) 0000: 0000: 0000: 0000: 0000: 0000: 0000: 0001 est abrégée en ::1 en utilisant les deux règles.\n Glossaire [1]: DHCP\nDynamic Host Configuration Protocol (DHCP) est un protocole réseau dont le rôle est d’assurer la configuration automatique des paramètres IP d’une station ou d\u0026rsquo;une machine, notamment en lui attribuant automatiquement une adresse IP et un masque de sous-réseau.\n[2]: Broadcast\nDans un réseaue informatique, Broadcast fait référence à la transmission d\u0026rsquo;un paquet qui sera reçu par chaque appareil simultanément sur le réseau.\n[3]: NAT\nEn réseau informatique, on dit qu\u0026rsquo;un routeur fait du network address translation (NAT) (« traduction d\u0026rsquo;adresse réseau », lorsqu\u0026rsquo;il fait correspondre des adresses IP à d\u0026rsquo;autres adresses IP. Un cas courant est de permettre à des machines disposant d\u0026rsquo;adresses privées qui font partie d\u0026rsquo;un intranet et ne sont ni uniques ni routables à l\u0026rsquo;échelle d\u0026rsquo;Internet, de communiquer avec le reste d\u0026rsquo;Internet en utilisant vers l\u0026rsquo;extérieur des adresses externes publiques, uniques et routables.\n[4]: DNS\nLe Domain Name System, généralement abrégé DNS, qu\u0026rsquo;on peut traduire en « système de noms de domaine », est le service informatique distribué utilisé pour traduire les noms de domaine Internet en adresse IP ou autres enregistrements.\n Références Suivre les liens suivants pour approfondir les sujets abordés:\n En savoir plus sur l\u0026rsquo;Adresse IP\nEn savoir plus sur le NAT\nEn savoir plus sur la représentaion des IPv6\nEn savoir plus sur le DNS\n "
    }
    
    , 
    {
        "url": "/system/hash/",
        "title": "Hash",
        "content": "La somme de contrôle (Hash) La version basique d’un tel mécanisme est appelée “somme de contrôle”.\nLe but d’une somme de contrôle est en quelque sorte d’être “l’empreinte” d’une donnée (attention, cette “empreinte” n’est pas une signature et ne garantit pas pour autant l’identité). Un exemple très simplifié serait de compter le nombre de lettres dans un message et de rajouter ce nombre à la fin dudit message. De cette manière, un destinataire peut immédiatement vérifier que le message n’a pas été coupé par erreur.\nUn mécanisme de ce type, bien qu’un peu plus complexe, est utilisé pour vérifier votre numéro de compte IBAN. Les deux derniers chiffres sont en effet une somme de contrôle (selon un algorithme un peu compliqué à résumer) des chiffres précédents. Un mécanisme similaire est appliqué aux cartes de crédit. Cela signifie que si vous entrez un mauvais chiffre par erreur lors d’un paiement, votre banque en ligne le détectera immédiatement. Bien entendu, ces systèmes sont simples et ne permettent que de détecter des erreurs involontaires.\nLes algorithmes de hashage C’est pour cela qu’ont été développés les algorithmes de “hashage”, littéralement qui mixent, mélangent les données. Les plus connus sont aujourd’hui la famille de fonctions SHA-2 et SHA-3.\nLe principe d’un algorithme de hashage est de générer, pour n’importe quelle information de n’importe quelle taille, une empreinte unique. Voici par exemple le hash SHA-2 256 bits d’un fichier sur mon ordinateur :\n9eb4ef548e36a589a46ef00395f3e2f722f5466438c9385976ab188bec59fa2d\n4 propriétés fondamentales Cette empreinte, ou plutôt ce hash, possède plusieurs propriétés particulièrement intéressantes.\nPremièrement, elle est “déterministe”. Cela signifie que si je prends le même fichier, j’aurai toujours une seule et même empreinte unique.\nEn deuxième lieu, elle est “chaotique”. Ça veut dire que si je change même très légèrement la donnée initiale, l’empreinte sera complètement différente. Voici par exemple le hash du même fichier avec un simple espace rajouté à la fin:\n260f4c3c44574df5c73dd2d1216e88d0c4137da3d1394d661875232bf4c50d0a\nTroisièmement, le hash est à sens unique. Si on peut toujours déterminer le même hash à partir du fichier, il est strictement impossible de retrouver le fichier à partir du hash. La seule solution est d’essayer tous les fichiers possibles. Dans certains cas, c’est cependant possible (par exemple si on a le hash d’un mot de passe dont on sait que la longueur est limitée, il est relativement simple de tester toutes les combinaisons).\nQuatrième propriété et non des moindres : un bon hash ne permet pas les collisions. Cela signifie que deux fichiers différents ne peuvent pas avoir le même hash. Le hash est donc unique, c’est une sorte d’empreinte digitale unique du fichier. Lorsque des chercheurs découvrent une collision, on dit que l’algorithme de hash est “cassé”. Il ne faut plus lui faire confiance et ne plus l’utiliser (c’est par exemple le cas de SHA-1 et de MD5. Ces fonctions ne doivent donc plus être utilisées).\nPour des raisons pratiques, un bon algorithme de hash sera également très rapide et donnera toujours une empreinte de taille fixée.\nLa finitude du hashage Votre réaction sera certainement de considérer que puisque la taille d’un hash est fixée et qu’il existe un nombre infini de fichiers possibles, alors forcément, il doit exister des fichiers avec le même hash.\nC’est vrai théoriquement mais relativisons. SHA-256 permet 2 exposant 256 hash possibles. Cela signifie que si 10 milliards d’êtres humains possédaient chacun un super ordinateurs capables de produire 1 milliard de fichiers avec leur hash à chaque seconde, il faudrait encore attendre l’âge de l’univers avant d’avoir une chance raisonnable d’obtenir une collision. Autrement dit, on peut considérer une collision comme impossible.\nConclusion En résumé, le hash est l’équivalent du numéro de carte d’identité d’un fichier ou d’une donnée. Comme tout est donnée et que la cryptographie est la science visant à sécuriser l’échange de données, le hash est un outil de base, indispensable. Il s’agit d’une fondation essentielle à la plupart des systèmes cryptographiques.\nMais comme nous l’avons vu, un bon hash requiert des propriétés très strictes : déterministe, chaotique, à sens unique et résistante aux collisions. Un mauvais hash peut miner tout un édifice cryptographique : si l’attaquant peut trouver des collisions, il pourra introduire n’importe quel message dans le système !\nC’est la raison pour laquelle il existe peu d’algorithmes de hashage très populaires et que ceux-ci sont d’une grande complexité interne.\nMais nul besoin de plonger dans la complexité. Si vous avez retenu et compris les quatre grandes propriétés, vous êtes armés pour mieux comprendre la cryptographie.\nLe Petit Cryptographe est une initiative de l’UCL Crypto Group soutenu par le FEDER dans le cadre du projet CryptoMedia/UserMedia.\n"
    }
    
    , 
    {
        "url": "/web/html_php/",
        "title": "HTML/CSS - PHP",
        "content": " Table of contents   HTML \u0026amp; CSS\n1.1 Balises \u0026amp; Attributs\n_ Balises\n_ Attributs\n1.2 Balises fréquentes\n  PHP\n2.1 Structure du PHP\n2.2 Formulaires\n2.3 Methode : GET vs POST\n3. JavaScript\n  Références\n   HTML \u0026amp; CSS  HTML\nHyperText Markup Language a fait son apparition dès 1991 lors du lancement du Web. Son rôle est de gérer et organiser le contenu. C\u0026rsquo;est l\u0026rsquo;HTML qui permet d\u0026rsquo;écrire ce qui doit être affiché sur la page (exemple: le texte, les liens, les images…).\nCSS\nCascading Style Sheets, aussi appelées Feuilles de style, permet de gérer l\u0026rsquo;apparence de la page web (agencement, positionnement, décoration, couleurs, taille du texte…). Ce langage est venu compléter le HTML en 1996.\nStructure HTML basique\n \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Ceci est un commentaire --\u0026gt; \u0026lt;title\u0026gt;Titre onglet\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Titre important dans la page web\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Ceci est un paragraphe sur la page.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Balises \u0026amp; Attributs  Les pages HTML sont remplies de ce qu\u0026rsquo;on appelle des balises. Celles-ci sont invisibles à l\u0026rsquo;écran pour vos visiteurs, mais elles permettent à l\u0026rsquo;ordinateur de comprendre ce qu\u0026rsquo;il doit afficher. Les balises se repèrent facilement. Elles sont entourées de « chevrons », c\u0026rsquo;est-à-dire des \u0026ldquo;\u0026lt;\u0026rdquo; et \u0026ldquo;\u0026gt;\u0026rdquo;, comme ceci : \u0026ldquo;\u0026lt;nom_balise\u0026gt;\u0026rdquo;. Il existe aussi la possibilité de mettre des attribut dans les balises. On distingue deux types de balises : les balises en paires et les balises orphelines.\nBalises  Balise paires\nElle se compose de deux balises. Une au début appelé balise ouvrante, et une à la fin appelé balise fermante, qui indique que la balise se termine. Ainsi tout ce qui est contenu entre les balises appartient aux balises.\nLes documents HTML commenceront toujours avec \u0026ldquo;\u0026lt;!DOCTYPE html\u0026gt;\u0026rdquo; permettant de spécifier le type du document pour les navigateurs. Par la suite dans le document HTML lui-même, il y aura en début de document une balise \u0026ldquo;\u0026lt;html\u0026gt;\u0026rdquo; et \u0026ldquo;\u0026lt;/html\u0026gt;\u0026rdquo; à la fin. La partie visible du document HTML est contenue entre les balises \u0026ldquo;\u0026lt;body\u0026gt;\u0026rdquo; et \u0026ldquo;\u0026lt;/body\u0026gt;\u0026rdquo;\nBalises orphelines\nLes balises orphelines sont des balises qui qui n\u0026rsquo;ont as besoin d\u0026rsquo;être \u0026ldquo;fermé\u0026rdquo;(ex: \u0026ldquo;\u0026lt;br\u0026gt;\u0026rdquo; pour un retour chariot).Elles servent aussi le plus souvent à insérer un élément à un endroit précis (ex: une image). Il n\u0026rsquo;est pas nécessaire de délimiter le début et la fin de l\u0026rsquo;image, on veut juste dire à l\u0026rsquo;ordinateur « Insère une image ici ».\n \u0026lt;img /\u0026gt; \u0026lt;!-- insere une image, en spécifiant le fichier dans l\u0026#39;attribut \u0026#34;src\u0026#34; --\u0026gt;  Attributs  Les attributs sont un peu les options des balises. Ils viennent les compléter pour donner des informations supplémentaires. L\u0026rsquo;attribut se place après le nom de la balise ouvrante et a le plus souvent une valeur, comme ceci :\n \u0026lt;img src=\u0026#34;photo.jpg\u0026#34; /\u0026gt;  Dans ce cas de figure, l\u0026rsquo;attribut \u0026ldquo;src\u0026rdquo; permet d\u0026rsquo;indiquer l\u0026rsquo;image à afficher. L\u0026rsquo;ordinateur comprend alors qu\u0026rsquo;il doit afficher l\u0026rsquo;image qui est compris dans le fichier \u0026ldquo;photo.jpg\u0026rdquo;.\nBalises fréquentes \u0026lt;h1\u0026gt;, \u0026lt;h2\u0026gt;, \u0026lt;h3\u0026gt;, \u0026lt;h4\u0026gt;, \u0026lt;h5\u0026gt;, \u0026lt;h6\u0026gt;\n Ces balises permetttent de définir des titres de différents niveaux : h1 pour les grands titres et h6 pour les titres des sections très spécifiques.\n \u0026lt;p\u0026gt;\n La balise utilisée pour créer des paragraphes. Ces paragraphes sont généralement (automatiquement) séparés par des sauts de ligne.\n \u0026lt;a\u0026gt;\n Cette balise est utilisée afin de créer des liens vers des ressources externes : une autre page web, un e-mail, une image, une autre section du document, etc. Les balises \u0026lt;a\u0026gt; contiennent le texte qui sera utilisé pour le lien, l\u0026rsquo;attribut \u0026ldquo;href\u0026rdquo; de cet élément est utilisé pour définir l\u0026rsquo;URL cible : \u0026lt;a href=\u0026quot;url_cible\u0026quot;\u0026gt;du texte qui sera lu par l'utilisateur\u0026lt;/a\u0026gt;.\n \u0026lt;img\u0026gt;\n On a déjà vu cette balise plus haut, mais petit rappel. Cette balise permet d\u0026rsquo;intégrer une image dans un document HTML. Voici un exemple d\u0026rsquo;utilisation : \u0026lt;img src=\u0026quot;url/vers/mon/image.png\u0026quot; alt=\u0026quot;Une description de l'image\u0026quot;\u0026gt;\n \u0026lt;div\u0026gt; et \u0026lt;span\u0026gt;\n Ces balises n\u0026rsquo;ont pas de signification particulière, elles permettent simplement de séparer des sections d\u0026rsquo;un document. La plupart du temps, ces balises sont utilisées pour la mise en forme (ou la structure).\n \u0026lt;ul\u0026gt;, \u0026lt;ol\u0026gt; et \u0026lt;li\u0026gt;\n Ces balises sont utilisées pour créer des listes. \u0026lt;ul\u0026gt; permet de définir une liste non-ordonnée et \u0026lt;ol\u0026gt; de définir une liste ordonnée. Pour chacune de ces listes, ce sera la balise \u0026lt;li\u0026gt; qui permettra de définir un élément de la liste.\n  Voici un exemple de liste avec \u0026lt;ul\u0026gt; :\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Café\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Thé\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Lait\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;    PHP  L\u0026rsquo;Hypertext Preprocessor (pour PHP), est un langage de programmation principalement utilisé pour produire des pages Web dynamiques via un serveur HTTP, mais pouvant également fonctionner comme n\u0026rsquo;importe quel langage interprété (ex: HTML) de façon locale. PHP est un langage de script utilisé le plus souvent côté serveur : dans cette architecture, le serveur interprète le code PHP des pages web demandées et génère du code et des données pouvant être interprétés et rendus par un Navigateur web.\nSa syntaxe et sa construction ressemblent à celles des langages Java et Perl, sauf que du code PHP peut facilement être mélangé avec du code HTML au sein d\u0026rsquo;un fichier PHP.\nLorsqu\u0026rsquo;un visiteur demande à consulter une page de site web, son navigateur envoie une requête au serveur HTTP correspondant. Si la page est identifiée comme un script PHP, le serveur appelle l\u0026rsquo;interprète PHP qui va traiter et générer le code final de la page (constitué d\u0026rsquo;HTML ou de XHTML, mais aussi de CSS et de JavaScript). Ce contenu est renvoyé au serveur HTTP, qui l\u0026rsquo;envoie finalement au client. Une étape supplémentaire est souvent ajoutée : celle du dialogue entre PHP et la base de données. Généralement, PHP ouvre une connexion au serveur de SGBD voulu, lui transmet des requêtes et en récupère le résultat, avant de fermer la connexion.\nStructure du PHP  Un script PHP peu être placer n\u0026rsquo;importe ou dans le document (souvent HTML). Un script commence par la balise \u0026lt;?php et finit par ?\u0026gt;. En PHP les varibles commence par le symbole dollars \u0026ldquo;$\u0026rdquo; suivit du nom de la variable, puis le contenu de celle-ci.\nSyntaxe basique du PHP\n \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Premier code PHP\u0026lt;/h1\u0026gt; \u0026lt;?php echo \u0026#34;Hello World\u0026#34;; // ce texte sera affiché sur le navigateur  $prenomBob = \u0026#34;Bob\u0026#34;; // assigne du texte dans la varible : \u0026#34;$prenomBob\u0026#34;  echo \u0026#34;Bienvenue \u0026#34; . $prenomBob; // affiche le texte \u0026amp; la variable concecutivement  ?\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Fonctions PHP\nIl existe tout un tas de fonctions pré-définis en PHP, mais si l\u0026rsquo;utilisateur souhaite en créer une, voici là syntaxe:\n \u0026lt;?php function writeMsg() { // crée la fonction  echo \u0026#34;Hello world!\u0026#34;; // code here...  } writeMsg(); // appelle la fonction ?\u0026gt;  Formulaires  Voici un formulaire basique HTML avec deux champs à remplir et un bouton pour valider\n \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;welcome.php\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; \u0026lt;!-- methode \u0026#34;post\u0026#34; utilisé --\u0026gt; Name: \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34;\u0026gt;\u0026lt;br\u0026gt; E-mail: \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;email\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Lorsque l\u0026rsquo;on appuie sur le bouton \u0026ldquo;submit\u0026rdquo;, le formulaire va rediriger vers une page PHP: \u0026ldquo;welcome.php\u0026rdquo;\n \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; Welcome \u0026lt;?php echo $_POST[\u0026#34;name\u0026#34;]; ?\u0026gt;\u0026lt;br\u0026gt; Your email address is: \u0026lt;?php echo $_POST[\u0026#34;email\u0026#34;]; ?\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Si \u0026ldquo;John\u0026rdquo; est remplie dans le champ \u0026ldquo;name\u0026rdquo; et \u0026ldquo;john.doe@example.com\u0026rdquo; dans \u0026ldquo;email\u0026rdquo;, alors il sera affiché sur la page \u0026ldquo;Welcome.php\u0026rdquo; :\n Welcome John\nYour email address is: john.doe@example.com\n Methode : GET vs POST  Les deux méthodes, GET et POST, créent un tableau. Ce tableau contient des paires \u0026ldquo;clé / valeur\u0026rdquo;, où les clés sont les \u0026ldquo;noms\u0026rdquo; contenus dans le formulaire et les valeurs sont les données d\u0026rsquo;entrée de l\u0026rsquo;utilisateur.\n$_GET et $_POST sont des varaiables dites \u0026ldquo;superglobals\u0026rdquo;, ce qui signifie qu\u0026rsquo;elles sont toujours accessibles, quelle que soit leur portée - et on peut y accéder depuis n\u0026rsquo;importe quelle fonction, classe ou fichier sans rien faire de spécial.\n$_GET est un tableau de variables envoyé via les paramètres URL.\n$_POST est un tableau de variables envoyé au script actuel via la méthode HTTP POST.\nGET Les informations envoyées avec la méthode GET sont visibles par tous/nimporte qui (toutes variables, valeurs sont affiché dans l\u0026rsquo;URL). Cette méthode à aussi une limite (en terme de quantité) de données transmissible. La limite est de 2 000 caractères. Cette méthode est à privilégier si aucune donnée sensible n\u0026rsquo;est transmise via le formulaire.\nPOST Les informations envoyées à partir d\u0026rsquo;un formulaire avec la méthode POST ne sont visibles par personnes. Tous les noms / valeurs sont intégrés dans le corps de la requête HTTP. Il n\u0026rsquo;y pas de limites sur la quantité d\u0026rsquo;informations à envoyer.\n/!\\ A noter:\nLa methode GET peut-être dangeureuse si mal utilisé, il est faut impérativement éviter l\u0026rsquo;envoie d\u0026rsquo;identifiants/mot de passe ou tout autres informations sensibles !\nPour verifier si un champ est vide, afin d\u0026rsquo;afficher les bonnes informations ou non, on utilise la fonction \u0026ldquo;empty()\u0026rdquo;.\nExemple, ci-dessous:\n \u0026lt;!-- Sera présent dans le code de la page \u0026#34;Welcome.php\u0026#34; --\u0026gt; \u0026lt;?php if (empty($_POST[\u0026#34;name\u0026#34;])) { // verifie si champ est vide  echo \u0026#34;Name is required\u0026#34;; } // si vide alors erreur  else { // sinon  $name = $_POST[\u0026#34;name\u0026#34;]; // affiche le nom  echo $name; } if (empty($_POST[\u0026#34;email\u0026#34;])) { // verifie si champ est vide  echo \u0026#34;Email is required\u0026#34;; } // si vide alors erreur  else { $email = $_POST[\u0026#34;email\u0026#34;]; // affiche email  echo $email; } ?\u0026gt;    JavaScript  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sed augue vel tellus efficitur ultricies. Donec sit amet magna et magna condimentum commodo. Mauris pharetra, mauris ac ultrices sagittis, odio mi rhoncus velit, sit amet tincidunt dui ipsum a enim. Nam nec lectus risus.\n\n  Références  Suivre les liens suivants pour approfondir les sujets abordés:\n En savoir plus sur les balises HTML\nTout savoir sur le HTML\nTout savoir sur le PHP\nTout savoir sur les formulaire PHP\n "
    }
    
    , 
    {
        "url": "/reseau/wireshark/",
        "title": "Wireshark",
        "content": "Wireshark est un outil très utilisé en réseau, il permet de surveiller les paquets de données échangés sur un réseau.\n C\u0026rsquo;est un logiciel multi-plateforme utilisable sous Linux, Windows et Mac.\n La documentation complète de l\u0026rsquo;outil est disponible ici\n"
    }
    
    , 
    {
        "url": "/",
        "title": "Home",
        "content": "  L\u0026rsquo;objetif de cette plateforme est de vous aider à élever vos connaissance, plus on va haut et plus l\u0026rsquo;observation est simple !\nSujets couvert   System Files Identification L’identification se fait premièrement par la lecture de l’extension du fichier qui se trouve juste derrière le nom du fichier (Attention sous windows, par défaut les extensions de fichier sont caché), on peut trouver par exemple “.png” ou “.jpg” pour une image. Cette identification permet à l’OS d’executer l’outil par défaut relié et configuré pour cette extension. La signature d’un fichier, une séquence unique de bits présent dans l’entête d’un fichier. \n Reseau Adresses IP Description Une Adresse IP (Internet Protocol) est un numéro d’identification qui est attribué de façon permanente ou provisoire à chaque périphérique relié à un réseau informatique qui utilise l’Internet Protocol. Cette adresse est assignée soit individuellement par l’administrateur du réseau local dans le sous-réseau correspondant, soit automatiquement via le protocole DHCP[1]. Si l’ordinateur dispose de plusieurs interfaces, chacune dispose d’une adresse IP spécifique. Une interface peut également disposer de plusieurs adresses IP. \n Web HTML/CSS - PHP Table of contents HTML \u0026amp; CSS 1.1 Balises \u0026amp; Attributs _ Balises _ Attributs 1.2 Balises fréquentes PHP 2.1 Structure du PHP 2.2 Formulaires 2.3 Methode : GET vs POST 3. JavaScript Références HTML \u0026amp; CSS HTML HyperText Markup Language a fait son apparition dès 1991 lors du lancement du Web. Son rôle est de gérer et organiser le contenu.  \n Steganographie Si vous voulez plus de details, j’avais ecrit un rapport asse complet (en anglais) sur la steganographie en 2018 \n Templates  \n "
    }
    
    , 
    {
        "url": "/categories/",
        "title": "Categories",
        "content": ""
    }
    
    , 
    {
        "url": "/tags/",
        "title": "Tags",
        "content": ""
    }
    
]
